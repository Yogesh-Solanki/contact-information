@model IEnumerable<ContactInformationClient.Models.Contact>

@{
    ViewBag.Title = "Contact Details";
    string errorMessage = string.Empty;
    string deleteContactErrorMessage = string.Empty;
    if (TempData["UnableToDeleteContact"] != null) { deleteContactErrorMessage = TempData["UnableToDeleteContact"].ToString(); }
    if (TempData["NoContactRecords"] != null) { errorMessage = TempData["NoContactRecords"].ToString(); }
    if (TempData["GetContactRecordException"] != null) { errorMessage = TempData["GetContactRecordException"].ToString(); }

}

<h3>@ViewBag.Title</h3>
<hr />

<div class="margin-top20"><h4>@Html.ActionLink("Add New Contact", "Add", null, new { @class = "btn btn-primary" })</h4></div>

@if (!string.IsNullOrEmpty(deleteContactErrorMessage))
{
    <h5><lable class="margin-top20 text-danger"><strong>@deleteContactErrorMessage</strong></lable></h5>
}
@if (!string.IsNullOrEmpty(errorMessage))
{
    <h5><lable class="margin-top20 text-danger"><strong>@errorMessage</strong></lable></h5>
}
else
{
    <input type="hidden" id="contactToDeleteId" value="" />
    <table class="table-striped table-custom">
        <tr class="line-height">
            <th class="padding-left5">
                @Html.DisplayNameFor(model => model.FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PhoneNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>Action</th>
        </tr>

        @foreach (var item in Model)
        {
            <tr class="line-height">
                <td class="padding-left5">
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PhoneNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { @class = "btn btn-info" })
                    <input type="button" class="btn btn-default" data-toggle="modal" data-target="#myModal" onclick="setContactId(@item.Id)" value="Delete" />
                </td>
            </tr>
        }
    </table>
}

<!-- Modal -->
<div id="myModal" class="modal fade" role="dialog">
  <div class="modal-dialog">
    <!-- Modal content-->
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal">&times;</button>
        <h3 class="modal-title">Delete Contact</h3>
      </div>
      <div class="modal-body">
        <p><h4>Do you want to delete this contact?<h4></p>
      </div>
      <div class="modal-footer">
          <button type="button" class="btn btn-default btn-md" data-dismiss="modal" onclick="deleteContact()">Ok</button>
          <button type="button" class="btn btn-primary btn-md" data-dismiss="modal">Cancel</button>
      </div>
    </div>
  </div>
</div>
<script type="text/javascript">
    function setContactId(id) {
        $("#contactToDeleteId").val(id);
    }

    function deleteContact() {
        var id = $("#contactToDeleteId").val();
        window.location.href = window.location.origin+"/Contacts/Delete/" + id;
    }
</script>